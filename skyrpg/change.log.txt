Version 4.5
	- Fixed explosion damage
		- Fixed grenade experience not working as well.

	- Added several new tank types
		- Teleporter tank returns teleporting tank to wherever the rock explodes.
		- Freezer and Bomber tanks have been added as well.
		- New tank cvars for movement speed during different tank variants added to config.cfg
	- Fixed the witches not working properly.
		- Known issue: Sometimes a witch will die twice and double print in chat.
	- Fixed the crashing issues.
		- No known crashes at this time.

Version 4.4.x
	- Added some new cvars for config.cfg that may not necessarily be in there, but will set default values if not.
		"fancy borders?"	"1"	-> Puts a bunch of ----- around the +x crafting materials earned...
						This is part of a feature I was developing.
		The rest of the cvars are the attribute leveling cvars.
		They were introduced in 4.3.x but are not explained.
		"constitution xp modifier?"	-> the attribute xp modifier multiples the xp earned to determine the attribute
						experience earned.
		"governing attribute xp modifier?" -> All talents are governed by an attribute. When a talent fires, the player
						earns experience for that attribute depending on this modifier.
		"constitution multiplier?"	-> like the xp modifier exists for all attributes. This determines the bonus it
						applies to talents it governs for each attribute level.
		"attribute start xp requirement?" 	"100000"
						-> the start xp requirement is the requirement to advance beyond level 1.
		"attribute experience multiplier?"	"0.18"
						-> the amount to raise the attribute xp requirement on levelup.

	- This concludes the official feature updates.
	Future updates will be bug fixes, if any issues arise.

Version 4.3.x
	- Redesigned CARTEL attribute system to be a leveling system where experience is earned for doing different actions
	  and based on the governing attribute of firing talents.
	- Survivor bots are no longer affected by Super Common Reflectors.
	- Redesigned the main menu header (white text) but you can undo this at any time by editing the translations file
	  and modifying the "Player Level Text" translation.
	- Implemented new talents based on the players current status effects (both positive and negative, but I will add
	  a variable to differentiate between the types in a future update.)
	- A lot more stuff that I can't remember at the moment... Will update later.

Version 4.1.x
	- Refactored the Points module for optimizations.
	- Refactored the Super Commons module for optimizations.
	- Refactored the AIDirector+ module for optimizations.
	- Cleaned up a lot of code.
	- Refactored a lot of miscellaneous code bits.
	- Made the hard decision to prioritize performance optimizations over code readability. Sorry. But on the plus side
	  players are reporting this update is lag-free and buttery-smooth.
	+ Will add a player settings option in the next update to allow players to locally control whether they have infected
	  health bars displayed or not.

Version 3.4.7.8.c
	- Patched a bug where survivor bots could not receive the benefits of medkits or pain pills.
	- OnPlayerRunCmd() optimizations to remove strcomp and instead place that in the SetMyWeapons() that only occurs when weapon swaps occur.
	- Patched a bug where GetTalentModifiers() was doubling the benefit of certain talents.
	- Added support for AoE-based ammo regen talents, effects are rpbulletaoe & rrbulletaoe respectively.
	- Added support for talents requiring repeat hits on the same hitbox, but not necessarily the same target
		- "require same hitbox?" 		"1" to enable - any other value or omission = disable.
	- Added support to cap the amount of multiplications a talent can receive.
		- "multiply limit?"				"25" this would limit the talent to 25 multiplications even if there were more qualified targets in range. < 1 disables.
	- Consolidated the # of keys for talent multiplication based on enemy type.
		- "multiply type?"				"3" - this would affect common infected and super commons.

 Version 3.4.7.8.b
	- Patched a bug where inspecting augments could sometimes try to load an augment of -1 index.

 Version 3.4.7.8.a
	- Super Common buffers have had their original functionality properly restored with an (O)n solution.
		- Buffer originally increased damage of each infected within range based on the # of other infected in range, but I couldn't figure out an optimal solution to keep it from causing lag in earlier builds
		so buffer had its buff changed to a flat 2.0x damage increase.
		- Now buffers will do a proper damage increase, making them a deadly opponent.
	- This is also a buff to psycho, masochist, or any other talent that is multiplied based on the # of enemies as it can now multiply for every infected type.
	- Common Infected and Witches will now accrue [Bu]rn stacks when within the area of a molotov or other human-activated fire sources.
	- Optimization pass for the OnTakeDamage() method and its accompanying methods.
	- Patched a bug where bot handicap values were being incorrectly set.
	- Patched a bug where headshots on common infected would not instantly kill them.
	- Patched a bug where common infected would trigger CalculateInfectedPlayerAward() multiple times on death.
	- Redesigned the round/campaign statistics counters and display.
	- Removed minimum restrictions on spells, so that talents such as spell cost reduction will be viable.
	- Patched a bug where primary weapon ammo reserves were not being properly set or enforced.
	- Patched a bug where handicap levels for players would not be properly reset and cause major ioob errors if the max # of difficulties was reduced below a players current difficulty setting.
	- Patched a bug related to properly enforcing weapon ammo reserves.
	- Optimized GetEngineTime() calls
	- Optimized all weapon data collection calls
	- Patched a logic error that resulted in all stamina being taken away when the jetpack was forcefully disabled for anyone reason.
	- Patched a bug where any existing loot bags could be corrupted if any existing loot bags expired and disappeared.
	- Some minor optimizations to float GetAbilityStrengthByTrigger() - needs more work

 Version 3.4.7.8
  *** Augments in Profiles ***
	- Augments will now be saved to profiles.
		- When you delete an augment attached to a saved profile, the associated augment slot will be empty after the profile finishes loading.
		- ALL AUGMENTS ARE UNEQUIPPED when loading a profile, so load your profiles, use !loadoutname <current active profile name> then equip your augments and save to have your augments attached to your saved profile.
	- Augments that are saved to at least 1 profile will have the ! symbol at the end of their name.
	- Augments can be attached to as many profiles as you want.
	- The profiles the augments are attached to will be displayed on their profile inspection page.
	- If you missed it above, YOU CAN DELETE AUGMENTS ATTACHED TO PROFILES
	- Autodismantle CANNOT DELETE AUGMENTS ATTACHED TO PROFILES, but you can delete them manually.

  - you will always load into every new round with your preset weapons, and your health fully-loaded.
  	Whether you fail, complete the previous map, you will ALWAYS have everything pre-loaded.
  - Patched a visual bug where when a player only received +healing rating that the bonus would incorrectly show the players tanking bonus, or nothing if there was no tanking bonus.
  - Patched a bug where common infected were never giving score.
	Regarding Common Infected:

	With this update, all players who contribute towards infected common deaths will receive the score reward and assist/contribution experience for damage dealt and tanking received.
	Previously, by design, only the player who landed the killing bow would receive rewards, since common health used to be a static, low value.
	Now, since common infected health pools can reach into the thousands, everyone involved should be rewarded, when applicable.
  - Loading a profile while a round is active will no longer give the survivor the weapons saved to that profile.
  - Fixed a logic typo that caused survivor bots to reset when their level didn't = their starting level, instead of only when it was < their starting level.
  - Patched a bug that caused spectating players on map swap to have their HAT levels double-printed.
  - Patched a bug where players with no augments could not load a saved profile.
  - Patched a bug where players names would have their HAT levels repeatedly added if they were in spectator.
  - Redesigned menu formatting.
  - Patched another bug associated with invalid infected being detected on player_spawn
  - Fixed a typo preventing the jetpack from disabling, causing flying players to fall out of the sky like meteorites when tanks are nearby.
  - Redesigned how the enrage functionality works; enrage multiplier ADDS to the common count, but does not affect finale multiplier or increase z_common_limit past the limit set in the config
  - Patched loot drop pickup so that a player is picking up the correct bag every time.
  - Survivors screens will slightly-shake when they take damage, overriding the normal take damage shake that this plugin prevents from occurring.
	- unfortunately, adding support for the directional attack arrow upon damage taken __is not__ possible here.
  - Patched a bug that caused action ability positions to be set to INTEGER.INTEGER_MAX on generation due to an inaccurate guard statement.
  - Player names will be properly color-formatted when upgrading talents or killing infected.
  - Patched a crash that could occur if a talent loaded then went on cooldown and then ended its cooldown before the players data had finished fully loading.
  - Players who leave combat during finales or enrage on servers that allow it will now properly be rewarded any owed experience.
  - Redesigned/recoded how healing, tanking, and buffing contribution is calculated.
  - Added support for advertisements built into the RPG:
	- {HOST} - replaces the string with the server hostname
	- {RPGCMD} - replaces the string with the server's rpg menu command
	name the translation "server advertisement #"
	example:
	"server advertisement 1"
	{
		"en"	"{O}You are playing at {B}{HOST}\nSay {O}!{B}{RPGCMD} {O}into chat to open the Control Panel!"
	}

	Because advertisements are using minimal code and the translation file in conjunction with smlib for colors, you have to specify in the config.cfg the # of advertisements, or it defaults to 0.
	"number of advertisements?"								"0"
	"delay in seconds between advertisements?"				"180"


 Version 3.4.7.7
  - Fixed a crash that occurs when a player uses the !autodismantle command to clear their inventory, and then tries to inspect an augment that no longer exists.
	- When the command is used, the main menu will be forced up on the players.
  - Loot bags now spawn in different colors depending on rarity:
	- green: minor
	- blue:  major
	- gold:  perfect
  - Added the augment upgrade system! =)
	- 3 new config.cfg keys:				The scrap cost to make a randomized upgrade attempt in any category by default.
		"augment category upgrade cost?"	"50"
		"augment activator upgrade cost?"	"50"
		"augment target upgrade cost?"		"50"

 Version 3.4.7.6.2
  - Fixed a bug that was causing cleric talents to not fire because I had a typo in the GetAbilityStrengthByTrigger arguments.

 Version 3.4.7.6.1
 - Hotfix to patch an index out of bounds error in rpg_wrappers @ 6720 that I missed.

 Version 3.4.7.6
 - Optimized a lot of methods, leapfrogging references and memo's to reduce time complexity.
 - Menu optimizations.
 - Optimized methods associated with action bars talents; abilities/ammo circles;
	- Reduced the # of calculations by eliminating unnecessary calls.
 - Added support for the "holdFire" ability trigger. This triggers when a player is holding down their primary attack key.
 - Added a new talent key, "weapon name required?" which WILL NOT be checked if "weapons permitted?" is not set to -1.
	- Reason: There's no point in checking for a specific weapon required, if an entire category of weapons is specified as allowed.
	- Note: any item considered a weapon can be specified; e.g. "weapon name required?" "first_aid" will cause the talent to require the player have the first aid in hand to activate.
 - Added a redundancy to ensure that if a client joins on the id of a client who crashed, that it will NOT assume they are that client (a steamid check will now occur)
 - All healing received by allies of the activator will now add experience to the activators Medic proficiency.
 - The first page of the augment inventory now shows a players equipped augments, in order, before displaying non-equipped augments.

 Version 3.4.7.5
 - Cleaned-up/Refactored code, resulting in the removal of 1,500+ Arraylists.
	- Some of these were being populated, some of these were not, but none of them were necessary thanks to recent updates to the core RPG framework.
	- Most of these were kv-key lists
		- Most keys no longer need to be stored, since I use a custom sort so that regardless of how talents are filled in the config files, they are always
			formatted in the same way in the code, allowing me to do a FAST GetArrayCell(arraylist, POS_OF_RESULT_NEEDED) call as opposed to having to loop through
			the keys to find the correct index EVERY time.
		These get called from players hundreds or thousands of times per second.
	or
		- lists designed to grab the names of talents.

	However, in recent updates, I began storing these names in a single arraylist that parallels the talentlist arraylist as the talents were streamed-in.
	With the plugin stable, I felt it was a good time to clean some things up.
 - Some more optimzations to other sections of code.
 - Changes to loot pickup/theft code.
 - More memoization! DP DP DP seriously this mod wouldn't be possible w/o it.
 - Fixed an index oob error that could crash the server related to special infected bots.
 - Ledged players can no longer self-revive themselves by holding the use key.
 - Defibrillator override is only called when a player joins mid-round as the defibrillator fix extension functions properly on latest SM.
 - Patched survivor bots so they can never be a higher level than "new bot player starting level?"
 - Fallen survivors can drop defibrillators:
	"fallen survivor defib drop chance base?"	"0.01"		// the base chance a fallen survivor will drop a defib on death.
	"fallen survivor defib drop chance luck?	"0.01"		// multiplies this value against the player who killed the fallen survivor, then adds it to the base chance.
 - Patched out a hardcode that prevented survivor bots from having their talents auto-reset if they were in violation of the talent tree requirements.
	Talent tree requirements are now enforced on survivor bots.
 - Fixed an issue where it would sometimes incorrectly represent the owner of the augment as the person holding the augment, and thus saying the player stole it from themselves.

 Version 3.4.7.4
 - Optimizations, removing most ...Section[client] arraylists as they're deprecated.
 - Code cleanup.

 Version 3.4.7.3
 - Added multiple new ammo circle-focused talents, to let players focus their specialty more towards a spell caster, should that be their wish.
 - Added two new talent triggers:
	"enterammo"		- when a player enters an ammo circle. if the value is set to "any" it triggers on-cooldown when the player enters any ammo circle when they weren't in one before.
	"exitammo"		- when a player exits an ammo circle. if the value is set to "any" it triggers on-cooldown when the player exits an ammo circle, resulting in them not being in any more ammo circles.
	If the field is set to a value other than "any" then the talent will only trigger if the ammo that triggers the state change (in an ammo or not) is that specific ammo type.
 - Added talents for several previously-unused talent effects and one previously-unused ability trigger:
	Trigger:
					"spellbuff"
	Effects:
					"strengthup"
					"activetime"
					"staminacost"
					"cooldown"
					"range"
	These 5 new effects show up on new talents in the default config, and as a result will show up on augments and existing augments, depending on if it's a perfect, or it's major type, will be able to reroll these new categories.
 - Added support for buffing and healing score earning with two new config.cfg keys:
	"rating multiplier buffing?"							"0.1"	// default values if the keys are omitted.
	"rating multiplier healing?"							"0.1"
 - Refactored HasTalentUpgrades(client, char[] TalentName) in rpg_menu.sp

 Version 3.4.7.2
 - Head shots on common infected will now instant kill the common infected, dealing damage equal to their remaining health.
 - Common infected health bars will no longer appear.
 - "enrage time?" set to "0" or less will disable the enrage timer.
 - Patched a bug where action bar ability multipliers were incorrectly calculated. (Credit to Pez for this one)
 - Another optimization pass for action bar abilities.
 - Optimization pass for all abilities/spells, refactoring intensive method calls.
 - Augment Score now shows on the inspect and equip/compare augment screens.
 - Added support for the character sheet showing the players current average augment level with the {AUGAVGLVL} key for use in the translations file.
 - All player data will properly reset when a player leaves, ensuring that no one else ever inherits any part of their data.
 - Added support for individual enrage timers per map, using the syntax cvar "enrage time %s?" in your config.cfg where %s is the mapname - case-sensitive.
 - Added support for FFA loot mode, where any players with FFA loot mode can loot other players bags for themselves, if the other player also has FFA loot on.
	- Players can toggle their loot mode on and off by default in !rpg -> Settings
 - Original owner of an augment is shown on the augment page. If you are the original owner, it will say "You" as the owner.
	- Augments without an owner (from previous builds) will grandfather in and set the owner as whoever is currently holding them.
	- If a player isn't the original owner and doesn't meet the requirement to equip the augment, the missing requirement will be shown to them.
	- Players cannot loot/steal/pickup for the owner a loot bag if both players have FFA loot enabled, if the loot bag's loot score is below the player who is trying to pick it up's autodismantle threshold.
 - Handicap Level, Augment (Avg) Level, and Talent Level all show in chat (HAT)
 - Added !autodismantle perfect as an option; options are now clear/perfect/major/minor
 - Patched an error that could cause a memory leak
 - Fixed a bug where attributes were being calculated twice - they will now calculate their bonus to talents once.
 - Added support for action bar talents being affected by augments, indirectly through new talent triggers that modify those talents.
 - Optimized ammo talent methods; rewrote sections where unnecessary method calls were being used.
 - Fixed a bug where non-compounding talent calls were not calling.
 - Incorporated an unused, new method to compartmentalize multiple keys into a bit-shift call, freeing up 14 keys per talent, across 403 default talents, for over 4,800 freed keys, reducing memory use, and allowing for even more talents!
	- Please see void SetClientEffectState(client) in rpg_wrappers.sp
	- As part of this, added the "target status effect required?" key and redesigned the "activator status effect required?" key to also be bit-based.
	BOTH KEYS USE THE FOLLOWING BITS:
	1;		// ON FIRE		16;		// FROZEN		256;	// NOT BILED		4096;	// ON GROUND
	2;		// ACID BURN	32;		// SCORCHED		512;	// ENSNARED			8192;	// FLYING
	4;		// EXPLODING	64;		// STEAMING		1024;	// NOT ENSNARED		16384;	// CROUCHING
	8;		// SLOWED		128;	// BILED		2048;	// DROWNING
 - Fixed a bug where Infected Defender types were not always shielding other Infected from damage;
 	- Infected will be shielded from all damage, from all damage sources, including talents, even indirectly, if within range of Defender type Infected moving forward.
 - A player can only reflect damage up to their maximum health, even if the enemy infected player were to hit them for more than that value.
*****************FIREWORKS EMOJI*****************FIREWORKS EMOJI**********************FIREWORKS EMOJI***************************FIREWORKS EMOJI********************************
 - All existing talents should now be fully-functional! Saving this version build and posting it so I have something to fall back on when I break it again!
*****************FIREWORKS EMOJI*****************FIREWORKS EMOJI**********************FIREWORKS EMOJI***************************FIREWORKS EMOJI********************************

 Version 3.4.7.1
 - Fixed a bug where any damage dealt to standard common infected would kill it.
 - Added new config.cfg key:
   "invert walk and sprint?"	"1"		// -> Experimental mode, where walk and sprint are inverted; hold shift to sprint, but it comes at the cost of stamina. DOES NOT AFFECT SURVIVOR BOTS.

 - Fixed a bug that was causing stamina-consuming abilities/spells/talents to require more stamina as cost than intended.

 Version 3.4.6.9
 - Rewrote the logic for loading profiles onto other players and onto bots
 - Redesigned database structure for storing/loading saved profiles
 - Redesigned the logic for the !loadprofile command.
 - Optimizations for certain methods that see a lot of traffic.
 - Redesigned how non-player infected enemies die and are removed.

 Version 3.4.6.8
 - The survivors' jetpack will not function when survivors are in the start or end of map safe rooms.
 - Survivors can now take CRUSH damage (damagetype 1 / DMG_CRUSH)
 - Fixed a bug where proficiency talents would return negative numbers instead of the remainder, resulting in talents affected sometimes returning negative results.
 - Potential bug fix for jetpack, will need to investigate preventing jetpack use in the safe area some other way.
 - Enabled Buffing & Hexing experience, but neither currently earn score.
 - Patched a logic error that saw players who enable a handicap under the score earning level not circumventing that requirement and earning score.
   - now all players with handicap will earn score, regardless of meeting that level requirement, if set.
 - Changed the colours used for augment drops for better readability.
 - Fixed a bug where talents that weren't compounding talents would go on cooldown when compounding talents were calculated unintentionally.
   - As a result of this bug fix, talents that are compounding, such as many weapon damage talents, will now properly go on cooldown where they didn't before, regardless of having a cooldown or not.
 - Damage and Tanking contribution requirements have been optionally added.
   "damage contribution?"		"0.1"	// -> Players must deal 10% of any enemies health pool to receive damage score/damage experience.
   "tanking contribution?"		"0.5"	// -> Players must receive 50% of their maximum health (based on current buffs) in damage from an enemy to be eligible for tanking score/tanking experience from said enemy.
 
 Version 3.4.6.7
 - Fixed a typo that caused damage and health regen talents to not calculate properly in v3.4.6.6
 - Added support to give players proficiency levels with the !powerlevel command.
 - Corrected physics behaviour of loot bags so they do NOT interact with players.
 - Recoded how damage reduction and damage penalty talents & abilities are calculated.
 - Fallen Survivor super commons are now unhooked and set to 1 life so when they die they drop items organically.
	If this becomes an issue, I'll code in support for those items to drop off of the fallen survivor and then possibly
	add support for custom item drops special to the fallen survivor.
 - Recoded/redesigned how augment tiers are calculated.

 Version 3.4.6.6
 - Fixed a bug that reintroduced survivor bot name repeating the [handicap] [level] tag in its name.
 - Added a cooldown between uses for the !stuck command:
	"seconds between stuck command use?"	"120"	// default time of 2-minutes
 - Added the ability for server operators to include the option to disable handicap outright, with the "nohandicap" configname for the mainmenu.cfg
 - Several optimization passes.
 - Added a new key for talents:
	"ability category?"		// 0 healing, 1 damage, 2 tanking
	This lets the plugin know which type of proficiencies the talent is affected by without having to code support for each possible value, which would
	make supporting third-party extensions of the RPG impossible.
 - Proficiency talents now reflect their modifiers on all talents in the menu in real-time.
 - A few miscellaneous bug fixes
 - Removed 17 deprecated & unused keys for talents.
 - Cleaned up unused code & deprecated methods.

 Version 3.4.6.5
 - Witches will now startle when taking bullet damage.
 - Optimizations to certain intensive calls;
	void ForcedWeakness(client) integrated into SetClientTalentStrength as this is the only time the value can change.
		added a new variable bForcedWeakness[client] to hold the value of the call.
 - Survivor bot data will no longer save if there is an idle player attached to the bot.
 - A bug causing a player to take over a survivor bots data, overwriting their own data... has been patched.
 - Players who are defibbed back to life have their penalized score, bonus experience multiplier, and handicaps restored. Their lost experience, if applicable, is not restored.
 - Players can now starting with a variable incap health percentage in config.cfg.
	"incap health start?"									"0.5" // default if not present is 0.5 or 50%. If it's set to 100%, incap health regen will tick once and auto-res the player.
 - Added another config.cfg addition to load custom witch settings, but regardless of the key name, it can be used to load ANY other config for custom settings, etc.
	"custom witch config?"									"witch.cfg"	// if the set config cannot be found, nothing happens; no foul.
 - Fixed a bug where abilities (such as basilisk armor or last chance) could make a player immune to damage. This will now cap based on the following (not new) variable in the config.cfg:
	"max damage resistance?"								"0.9"	// if this key is not present, the default is 0.9.
 - Survivors receive a brief (one frame) invulnerability period when entering incap state now.

 Version 3.4.6.4
 - Added first iteration of gear comparator when considering whether to equip a new augment.
 - Reroll functionality is now in the mod!
 - Marketplace is removed - it detracts from the users individual experience in a shared-world.
 - Full augment info is displayed on the augment inventory page.
 - Fixed a bug that replicated survivor bot levels over and over.
 - Added "talent cooldown minimum value?" for talents, so that the starting cooldown time isn't the lowest possible cooldown time.
 - Rolled-back the change that saw attributes only affect augments. Attributes now affect talents - not augments - again.
 - Players can now use the !autodismantle feature for multiple purposes - type the !autodismantle command in chat for more info!
 - Players can now favourite augments they don't want to be destroyed by the !autodismantle command.
 - Players now have their handicap level reset if they die and are no longer eligible for their current handicap level - client is notified.
 - Only medkits can reset the incap count now.
 - FINALLY patched the bug that caused player data to not load properly during live rounds when connecting onto a bot.

 Version 3.4.6.3
 - Survivor bots with handicaps no longer have those handicaps contribute to the common limit.

 Version 3.4.6.2
 - Added a new variable to track whether a melee weapon is equipped or not.
 - Optimized the SetMyWeapons(client) method.
 - Fixed a math bug in GetTalentInfo()
 - Fixed a bug in GetAttributeMultiplier() where I was using the wrong variable for the calculation.
 - Bags will no longer be created and instead augment parts given when a potential item does not meet the players item loot% threshold setting.
 - Players can no longer choose to auto-destroy minor augments specifically under the new auto-dismantle on roll system, as minor augments are determined after the player picks the item up, not at the time of bag generation.
 - Redesigned attributes for linear (instead of exponential) multiplication.
 - Added a new variable to control if attribute talents are additive or multiplicative:
	"are attribute talents multiplicative?"			"0"			// By default, if this key is omitted attribute talents are additive.
 - Tanking now earns score.
 - Tanking now earns experience from common infected.

 Version 3.4.6.1
 
 - Removed hard-coded melee weapon damage cooldown due to potential bug crash related.
 - Redesigned healing to scale off of healing talents, not damage talents. This means healing will no longer scale with damage.
 - Fixed a bug where items in healing or throwable slots could be recorded as a clients weapon and the wrong type of proficiency would get called.
 - Heal strength will now display proper values on the ability bar.
 - Max health capped to 30,000 for survivors because engine breaks around 33k health

 Version 3.4.6.0
 - Fixed a bug in a certain calculation.
 - Optimized memory usage.
 - Optimized keyvalue arrays.
 - Survivor bots will now ignore Defender common affix mobs and hurt them as normal mobs due to the difficulty programming support for L4D2's AI to recognize Defenders.
 - Fixed melee weapon damage not working properly (it was registering as blast/explosion damage)
 - Changed hard-coded melee damage cooldown of 0.25s -> 0.1s
 - Optimized many methods to used memoized data.
 - Handicap levels now increase common infected allowance across the board == living survivor handicap levels.
 - Fixed a logic error causing a visual bug where infected health numbers would not drop (but the health bar would)

 -Rolled-back changes to the GetInfectedAbilityTrigger method as it was causing random crashing without any error logs.

 - Added more new keys for talents:
	"require ally on fire?"							"1"			// If 1, requires a teammate within "coherency range?" to have [Bu]rn stacks from fire.

 Version 3.4.5.9a
 - Spells/Abilities now receive buffs from augments and their governing attribute, where applicable.
 - Corrected an issue where spell/ability stamina cost was always being set to 1.
 - All damage/health of enemies is now calculated in the same method so enemy level/character data always shows accurate values.
 - Patched a rare bug where common infected would be designated as super commons, but not be super commons.
 - Added new keys for talents:
	"must be within coherency of talent?"			"cleric"	// this talent would only trigger if the activating player is within coherency range of a teammates cleric talent.
	"must be unhurt by si or witch?"				"1"			// if 1, talent is skipped if the target is common infected, or if the witch/special infected has hurt the survivor.
	"skip talent for augment roll?"					"1"			// for specialty talents designed for coherency triggers, so they don't roll as buffs on augments as they would buff nothing.
	"require ally with adrenaline?"					"1"			// If 1, must be paired with the "coherency range?" talent. If an ally within the coherency range has active adrenaline, this talent fires.
	"require ally below health percentage?"			"0.5"		// This talent requires an ally within coherency range that is at 50% health or lower.
	"require ensnared ally?"						"1"			// If 1, there must be an ensnared ally within the "coherency range?" for this talent to trigger.
	"target must be ally ensnarer?"					"1"			// If 1, the target of this talent must be a special infected that is ensnaring an ally in range.
	"multiply strength ensnared allies?"			"0.05"		// If > 0.0, increases the talent strength by multiples of this value, for each ensnared ally within "coherency range?"
	"require enemy in coherency range?"				"1"			// If 1, this talent will only activate if there is an enemy within the coherency range. Best used with talents that passively trigger, as they're on a timer.
	"enemy in coherency is target?"					"1"			// If 1, this talent will automatically set the target of the talents "target ability effects?" to an enemy special infected (or survivor) within coherency range.
	"no augment modifiers?"							"1"			// if set to 1, augments will not affect that specific talent
	"health percentage remaining required?" 		"0.75"		// % health required to trigger this talent.
	"health cost on activation?"					"0.01"		// 1% cost to health each time this talent triggers.
	"multiply strength downed allies?"				"0.05"		// % to multiply the talent strength for each incapacitated ally in range. (survivor only)
 - Added the "explosion" "ability trigger?" that fires off whenever a special infected, witch, or common infected takes damage from a pipebomb, fireworks, explosive ammo, or other explosive source triggered by the activator.

 Version 3.4.5.9
 - Added a new method in rpg_wrappers, GetClientsInRangeByState; Added 4 SURVIVOR STATE definitions to accompany it.

 - Several bug fixes:
	- buying ammo now restores the proper amount instead of the vanilla amount.
	- fire no longer triggers talents, and is only buffed if a player has fire damage increasing talents.
	- over-killing special infected will no longer provide more score than intended.
 - Patched an exploit that was being used to circumvent losing bonus multiplier.
 - Fixed a bug where enemy data could become bugged if a players handicap data didn't load properly.
 - Fixed a bug that required a player to swap weapons at the start of the round to activate the correct talents for that weapon.
 - Fixed a bug where common infected triggered OOB errors
 - Fixed a bug wherein super commons could occasionally error and no longer take damage

 There are a lot of keys that I added support for, but are either unused or were commented-out from when the mod had severely-poor time complexity.
 I've gone ahead and re-enabled a key for talents:
 "activator ability trigger to call?"

 I've added a new key that does the above but for the target(s) of talents, and renamed the key above for consistency from "ability trigger to call?"
 "target ability trigger to call?" - for example, being on the receiving end of another players AoE heal ability could fire a specific trigger that could fire off other
 talents, and those talents could each have different scenario requirements, creating even more potential for branching talent builds.

 At this time, the default talentmenu.cfg only contains one talent that takes advantage of this: Blood Warrior I, which triggers Blood Warrior II with this call.
 This means that Blood Warrior II can only trigger when Blood Warrior I triggers, and only triggers at this time if it's not on cooldown. Otherwise it will trigger the next
 time that Blood Warrior I triggers.
 This key allows you to fire off other talents based on certain scenarios, assuming the player has unlocked those talents.

 Version 3.4.5.8a
 - Fixed the double-loading of player augments when loading a saved profile.
 - Fixed a stack overflow bug related to the CreateAoE method - it could indefinitely call itself but that is no longer the case.
 - Fixed an error when a player left that it would not properly set the basename, so new joining players would have their name.
 - Fixed an error that caused new players to sometimes not create data due to a very rare index out of bounds error.
 - Players who are no longer eligible for a handicap level will have it taken from them on load.
 - Changed ability bar active/cooldown times to show as whole numbers instead of floats.

 Version 3.4.5.8
 - Survivor bots now have a handicap set equal to the highest handicap player in the server.
	- Survivor bots handicap level should now also display on their name / when players look @ them.
 - Re-ordered survivor augments to load AFTER the action bar has fully-loaded, to prevent handle/array errors.
 - Survey says I need to find a workaround for data storage when steam servers are down.
 - Fixed a logic error where new players names would be set blank.
 - All minor augments will now disassemble if a player sets minor disassembly to enabled.
	- Previously, minor augments that were "upgradeable" would not be disassembled.
 - Patched an oob error related to memoization of talents; should now be resolved.
 - Redid how common infected health is calculated and removed non-instanced storage of common infected health.
 - Refactored & Memoized ability triggers; redesigned IsAbilityFound in rpg_wrappers.sp
 - Corrected an issue where bot handicap values would not always be set to the correct value.
 - Redesigned damage and health calculations to use a new method called GetInfectedData in rpg_menu.sp
 - Restructured perfect augment menu name representation.
 - Now, target effect augments can roll even if activator effect augments don't roll.
 - Fixed an issue preventing some players with no saved data from saving data for the first time.
 - Finale survival bonus has been moved to the CallRoundIsOver() method, and players will now see the finale bonus if it applies to them.

 Version 3.4.5.7b
 - Patched a bug I created while memoizing action bar talent menu positions =)
 - Refactored/optimized several methods/calls related to the action bar.
 - Changed handicap level in player name to orange text... maybe let SO's customize this?
 - Formatted values in the handicap menu since gains/penalties can rise above 999%

 Version 3.4.5.7a
 - Fixed a bug with slow effect and killtimer.
 - Fixed a bug wherein sometimes players would load without a name.
 - Fixed a crash where survivor bots would save endlessly.
 - ISSLOW variable changed from Handle to bool.
 - Datascreen now reflects which limb a player is aiming at when calculating/showing damage.
 - Fixed a visual error in the menu where ability cooldown and active times were not displaying.
 - Handicap level (if applicable) now shows in chat and as part of player names; eg. [handicap] [level] name
 - Added static definitions for HITGROUP types.
 - Added Handle ActionBarMenuPos[] to memoize menu position of talents assigned to action bars.

 Version 3.4.5.7
 - Added !autodismantle feature. Using the command provides the syntax as a response in chat.
		!autodismantle minor - toggles on/off auto dismantling of minor augments.
		!autodismantle <score> - toggles the auto dismantling of ANY augment that rolls below this score value.
 - Rewrote !giveaugment to support both two methods of giving augments away.
		!giveaugment aim <augment id no.> - gives the augment to the survivor player you're aiming at.
		!giveaugment <name> <augment id no.> - gives the augment to the first survivor found whose name contains the substring provided.

		When a player gives another player an augment, it now will automatically try to re-open the gifters augment inventory.
 - Fixed a bug where the timer for talent cooldowns was not checking that the cooldown array size matched the # of talents, which could happen
   if a player disconnected after the cooldown was created, and that same client ID is replaced by another client before the cooldown finished.

 Version 3.4.5.6
 - Added config.cfg key "level required to earn score?" so new players can get accustomed to the mod for a few levels before difficulty starts to increase.
 - Handicaps, which can be set in handicap.cfg are now fully-integrated into the mod.
 - Added support for players setting a minimum required score for augments or they are auto-dismantled; !autodismantle <score>

 Version 3.4.5.5
 - Talents in talentmenu.cfg now hide/display to users based on whether a survivor or infected class can activate the talent via the "activator class required?" key.
		This should make it so that talents for both infected and survivor can be added to the different categories in each tree, but will only show to eligible players.
 - Fixed a bug that was consistently causing server crash when the start of map checkpoint door opened.
 - Todo: add a new key designed specifically for infected bots for score threshold requirements to activate layered talents.
 - Fixed a memory stack space exceeded error
 - Yay fixed the error that was crashing the server consistently; due to the way saving data works, we cannot do it on round end.
 - Augment equipped positions are saved whenever an augment is unequipped or equipped.
 - Added support for "give augment command?" key, so players can give their augments to other players (does not support selling at the moment)
 - Added Surname support for augments so they aren't bland "minor", "major" and "perfect" augments without souls any longer.
 - Added support for GetInfectedAbilityStrengthByTrigger in rpg_wrappers.sp for laying the ground work for infected talents.
 - Removed a GetAbilityStrengthByTrigger call that shouldn't exist.
 - Added support for hunter and jockey talents.
 - Added the "distance" and "pounced" ability triggers. Distance affects smoker/jockey/charger/hunter.
 - Patched CreatePlayerExplosion in rpg_wrappers.sp and fixed a logic error that caused all special infected/survivors to always get hit by certain explosions even when they were outside of range.

 Version 3.4.5.4
 - Added the "claw" ability trigger, which fires when a special infected hurts a survivor but does not currently have an ensnare victim.
 - Added the "poisonclaw" activator/target effect.
 - Also added the "burnclaw" trigger effect.
		poisonclaw adds a stack of acid burn [Ab] based on the talent strength.
		burnclaw adds a stack of burn [Bu] based on the talent strength.
 - Ability Trigger "v" now fires when a human infected player presses their primary mouse key.
 - "activator class required?" in talentmenu.cfg is no longer deprecated, though omitting the key or setting it to < 0 will ignore it.
		0 (survivor) 1 - smoker 2 - boomer 3 - hunter - 4 spitter - 5 jockey - 6 charger - 7 witch - 8 tank 9 common infected
        Support is added back for this key in preparation of adding special infected talents
 - reminder to swap bool IsClassAllowed(int zombieclass, int classesAllowed) to bitwise in a later update; Should be fast enough for now; this method was quick (and is still relatively fast)

 Version 3.4.5.3d
 - As there is not limitless memory, unlimited inventory space has caused... items to disappear into the ether when server memory is reached.
		- I've added a new kv, "max persistent loot inventory size?" with a default of 50. This should also keep the overall database size down, saving $$$
 - Updated the Central HUD (bottom, black semi-transparent background) text to not display a players level twice when looking at them.
 - Fixed a OOB logic error that could cause a crash when generating major or perfect augments.

 Version 3.4.5.3c
 - Added additional guard statements and checks to ensure that all players and infected are hooked; unhooked players/infected cannot deal/receive damage.
 - Players who are hit by or suffering from bomber explosions [Ex] debuff will be now placed in combat.
 - Refactored the RollLoot method and associated functions.

 Version 3.4.5.3b
 - Fixed a logic error in OnCommonInfectedCreated which didn't initialize common infected into players data pools on spawn
		causing common infected to not take environmental damage until either damaging a survivor or being damaged by a survivor.
 - Bomber explosion debuff will now affect common infected caught in the blast for both the super common death and when players explode.

 Version 3.4.5.3
 - Fixed a bug in Timer_DeleteLootBag in rpg_wrappers.sp that could occasionally cause a server crash.
 - Common infected will no longer be deleted in OnCommonInfectedCreated (also in rpg_wrappers.sp) during inactive rounds, as this could also occasionally cause a server crash.
 - Fixed a bug that could cause a crash when generating new loot for a player.

 Version 3.4.5.2
 - Added the option to specify how many roll attempts are made per player on kills. Note on common kills only the player who killed it gets the rolls.
	"roll attempts on common kill?"
	"roll attempts on supers kill?"
	"roll attempts on specials kill?"
	"roll attempts on witch kill?"
	"roll attempts on tank kill?"

	- These all default to 1, so specify in the config.cfg what the values should be.
	- Added a check when picking up bags to see if it's the same player looting multiple bags in succession. If it is, it'll only display the "x is searching a bag..." notice once every 3 seconds.
	- Refactored the GetBulletOrMeleeHealAmount(healer, target, damage, damagetype, bool isMelee) function in events.sp

 Version 3.4.5.1 Rebalance/redesign
 - Added 6 new ability triggers for new talents designed to stop magetanking (super strong with no drawbacks in all 3 areas) without limiting player agency:
	lessDamageMoreHeals
	lessDamageMoreTanky
	lessTankyMoreHeals
	lessTankyMoreDamage
	lessHealsMoreDamage
	lessHealsMoreTanky
 - Players with no augments equipped (or new players) will now have the proper levels of 0 applied to empty augment slots.
 - Fixed talent active time incorrectly being set to 0.0s for any applicable talent; talents in the menu should now also show the correct value for this.
 - Added wider potential force and potential physics impact ranges to loot bags on spawn.
 - MoreHeals does not apply to self-health regen
 - Fixed CLERIC visual effect not showing
	
	these talents ignore "activator ability effects?" and "target ability effects?" and "activator / target required?" fields should be set to -1 or omitted.
 Version 3.4.4.9a hotfix
 - Fixed an issue where talents reducing incoming damage would reduce the efficacy of talents based on incoming damage, such as thorns.
 - Added rating multiplier for augment levels to balance augments.
 - Fixed a bug where common infected receiving fatal damage would not die from that attack if it was from a bullet.
 - When a client leaves the game, their augment/inventory data is now properly cleared.

 Version 3.4.4.9
 - Fixed visual bugs on talent info screen for abilities with consecutive hit multipliers that were showing -100% instead of the correct value previously.
 - physics objects that can be interacted with can now be generated for loot, to give players a sense of loot being 'physical' objects.
   If loot bags are disabled and the loot system is enabled, loot will be auto-rolled in text chat and given to players automatically if the infected drops anything.
 	- Added new variables associated with this feature:
		"generate interactable loot bags?"						"1"
		"loot bags disappear after this many seconds?"			"10"
		"item drop model?"										"models/props_collectables/backpack.mdl"
 - FINALLY added support for pipe bombs & other explosives dealing variable damage against common infected.
	- values can be increased by talents triggered by "S"
 - Proficiency levels now affect your damage! By default, it's 1% per proficiency level.

 Version 3.4.4.8b
 - Misc bug fixes, performance optimizations.

 Version 3.4.4.8a
 - Second attempt to fix the lag issue.
 - Second attempt to fix certain super commons having a bunch of health.
 - Laying the groundwork for a new augment feature.
 - Added support for end of map loot rolls similar to the end of map rolls in the RPG that Patriot-Games used, this time for augments instead of SLATE/CARTEL.
 - Fixed some entity oob errors resulting from refactoring.
 - Fixed void return type for OnMapStart and OnMapEnd
 - Added a new native to ReadyUp 8.3 so RPG can let ReadyUp know when the round is failed/restarted by a vote of some sorts, either artificial or real.
	- native added: ReadyUp_RoundRestartedByVote();
 - Corrected bug causing end of map loot rolls to not reward to players who were under the augment roll required score.
		  Now, all living players will receive a guaranteed ( by default in my server settings, no idea for other server operators)
		  loot roll, even if they don't meet the requirements to roll augments under normal circumstances.
 + TO DO: Make commons take damage from pipebombs
 + TO DO: Make biled special/common infected be able to take damage from other infected - right now infected have no FF of any kind but this is because
		  It has been a low-priority fix.

 Version 3.4.4.7
 - Redesigned how augments are rolled to be friendlier to player time investment/reward and to bring minor augments in line with major/perfect and major in line with perfect.
   Augments from the augment beta test have been destroyed for all players - I'll be adding a variable to the database to give out free rolls soon, to reward the beta testers.
 - First attempt to fix the massive lag that is caused when a survivor swaps to spectator and back.

 Version 3.4.4.6
 - Added support for anti-camping, so that players too close to "last kill" spots won't earn experience.
   This can be used to enforce varying kinds of 'forward progression'

 Version 3.4.4.5
 - Removed datapack timer while I figure out some stuff.
 - scenario_end should now properly call when the variables are met.

 Version 3.4.4.4
 - Added SetClientTalentStrength(client) to call when an augment is equipped or unequipped.
 + To do: Add a comparator/confirmation screen when selecting an augment slot currently occupied by another augment.
 + Add support for survivor bots to use augments.