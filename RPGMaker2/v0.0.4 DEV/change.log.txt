
	RPGMaker2 v0.0.4.8 (RPG Construction Set)
	By Skye

	Other Credits:

	AtomikStryker (biletheworld reference on how to traceray)
	panxiaoxiao ?? man im sorry if i butchered that
	mr.zero stocks has been invaluable
	Asherkin <3 my bae invaluable resource for learning
	Silvers
	Soul

	RPGMakerv2 changelog:
	0.0.4.8
	This update is entirely an optimization update!
	With this update, server operators should see a noticeable difference in terms of stability and lag.
	I've refactored MANY heavy-activity methods, so we should see less memory usage, less lag, and more overall stability.
	- Fixed MANY memory leaks.
	- Optimized A LOT of method calls.
	- WAY BETTER Memory management this update. WAY, WAY, WAY BETTER.
	0.0.4.7
	Added new keys to allow for AoE (think: Hemomancy) style talents, and to allow talents to fire secondary effects.

		- "primary aoe?" - makes the talent do an aoe effect on all eligible players. This is a float value for diameter range.
		- "secondary aoe?" - aoe effects on the secondary effect of the talent, if set. This is a float value for diameter range.
		<= 0.0 disables aoe, so omit if you don't want to use it.
		
		- "secondary effects?" - effects that fire off after the primary effect is successful.
		- "status effect multiplier?" - multiplies the talent strength by the # of activate status effects on the player.
		- Added new "ability trigger?" values:
			"C" - When a player kills a witch, super common, or common infected. It was listed in the legend but was never coded in.
			- "didStagger" - the player who caused the stagger.
			  "wasStagger" - the player who was staggered.
			  these fire with a 2-second cooldown when survivors or SI are staggered.
			
			- "aoegive" the player whose aoe it was.
			- "aoereceive" when a players talent affects other players via "primary aoe?" or "secondary aoe?"
			these only fire if the aoe hit at least one teammate.
			
			- "didHeals" when a player heals a teammate with a gun or melee weapon.
			- "wasHealed" when a player is healed by a teammate who used a gun or melee weapon.
			
			- "witchkill" when a player lands the killing blow on a witch.
			
		Even more ability triggers, but these are ALL related to weapon range modifications:
		These should all be compounding talents.
			- These must all have survivor effects of "d"
			- "gunRNG" - this is gun range modifier. It modifies the base range before all other multipliers are considered.
			- "ICwRNG" - In-combat weapon range bonus. Write a story, like "you're so much more-focused when you're in combat, so you have better proficiency or something."
			- "OCwRNG" - This would only affect spells cast when out-of-combat since they're based on weapon damage which is based on range.
			- "ammoreserve" - This modifies the total ammo reserve of a weapon.
			Ammo Reserve bonuses could be for all weapons or they could be for specific weapons.
		
		- If you want spells/ammos to follow the creator around and have an aura effect, set this key to 1:
			- "is aura instead?"
		- Effect over time keys:
			- "is effect over time?"	- is this talent an effect over time?
			- "cooldown trigger?"		- fires this off when the cooldown period ends.
			- "inactive trigger?"		- fires this off when the active period ends.
			- "buff bar text?"			- If the AoE effect has a buff bar indicator, put it here.
			e.g.: "buff bar text?"	"hemo" would display as [hemo]
		- Added a few new ability effects:
		"r1bullet" - refunds 1 bullet * roundUp(talentStr)
		"rrbullet" - refunds a raw amount of bullets. amount = roundUp(talentStr)
		"rpbullet" - refunds a percentage of bullets equal to (talentStr * reserveCap)
	0.0.4.6
	-	Changed effect over time triggers to be called on the same tick as active effect over time nodes. I did this so that
		effects first tick is on the same tick as they are activated.
	0.0.4.5
	-	Added support for talents that only trigger when a player is crouching.
	-	Added support for "wtr"(water), "grnd"(in the air), "onfire"(on... fire) and "ducking"(crouching) talent nodes firing outside of
		damage calculation; these previously were only called when the damage event fired, but now they are called during OnPlayerRunCmd.
	-	Fixed some more bugs on the back-end.
	-	Changed the difficulty to be based on your level: (playerlevel * ratingDifficulty) + rating.
	0.0.4.3
	-	Configurable Attribute System added.
		Attributes can be tied to any node and their multiplier will increase the efficacy of said node.
		If a server operator doesn't want an attribute tied to a node, simply omit the "governing attribute?" key from the node.

		There are default attributes that I've created, which I use on my own public server, and they're tied to all the nodes
		in the talentmenu.cfg that I've built as an example. Any amount of attributes can be created, but only one can be tied
		to any node. I'll add support for tying different attributes to different node effects in a later update. For now, I just
		wanted to get this system integrated.
		Values modified by attributes will be the values shown to players. Currently, the algorithm or float values aren't available
		on the character sheet, but I plan to show the float values directly to players (i.e. 0.1 = +10% shown to player) in a later
		update. I think posting the algorithm right on the character sheet is a mistake and should be reserved to theorycrafting.
		-	By default, "diminishing returns?" for each attribute kicks in at 10, so in my version there is no diminishing returns
			as there is only 10 planned layers (and 6 completed as of writing this) though you can theoretically implement
			an infinite (re: memory pending) number of layers.
		-	Default Attributes: (CARTEL Attributes)
			a. Constitution
			b. Agility
			c. Resilience
			d. Technique
			e. Endurance
			f. Luck
	0.0.4.2
	-	Rating changes:
		a. All players joining the server, who aren't a carry-over from the previous map will have their rating set to 0.
		b. 20% of your earned rating is lost when you die.
		-	Rating Difficulty:
			At 0 rating, the difficulty is equivalent to vanilla's "easy" difficulty, and scales gradually up-to "impossible" (around 100,000 rating) and beyond.
	-	The base # of common infected to start-off is set to the vanilla amount of 30.
	-	Formerly a static variable, The super common limit is set to default to 10% of whatever the current common infected limit is; it defaults to 3.
	-	Formerly a static variable, The uncommon limit is set to default to 20% "..." it defaults to 6.
	-	COMMON INFECTED HEADSHOTS:
		a.	Common infected headshots now causes your bullet (or melee weapon) to deal the remaining amount of their life, both awarding you based on that value
			and killing the common instantly. this doesn't work on super commons. Hopefully solves the problem with the invisible zombies (all their bits are exploded, but they're still around)
	-	The special infected damage values shown in the character sheet are now the accurate values for incoming damage.
	-	Knife (the RPG version of a parry) is 1.0 seconds of forgiveness time, please let me know if it needs to be longer.
	-	Default Experience earned right now is very low but that's irrelevant on the test server, as everyone starts at max level. Please do provide feedback on it, to help me figure-out where it should be.
	-	NEW PLAYER ISSUES:
		a.	(If no data loads for you, say !newdata in chat; I haven't fully-hooked the new player system up, and this is the manual method.)
	-	COMMANDS:
		a.	!RPG is the menu command, and case-sensitive at the moment. Will get it changed so that it accepts any variation in the future.
	-	TALENT NODES INFO:
		a.	Default values for Max HP (when not considering other +Health upgrades from buffs/debuffs) from non-buff health nodes is 376 at the moment.
			I'm not sure how high it goes if you stack all the +Health nodes from all the debuff/buff versions, but you can get pretty tanky.
	
	0.0.4.1
	-	Made changes to the layer restrictions of the talent menu.
		a. Modified the talent menu so layers that are not unlocked can be previewed.
		   Layers that can only be previewed will have their name preceded by (Preview Only)
		b. Modified the node info/unlock screen to show the requirements if any are missing
		   even if the player has no unlocks remaining on the current layer.
	-	Made some translations changes to the translations file (skyrpg.phrases.txt) to
		better convey the restrictions of the node map to players.
	-	Added a new key to mainmenu.cfg:
		"show layer info?" possible values: 0 or 1
		This is hard-coded disabled on the "main" menu, which is always the first-menu called.
		This value determines if players see the layer upgrade/lock info in the menu title.

	RPGMakerv1 changelog:

	4.2 (PUBLIC)
	Added "teams allowed?" key to the ability tree.

	4.1
	Further optimization for survivor bots.
	Players get health proper on incap.
	Hostname now displays to people; people have asked what server they play in, and RPG allows each server to set individual hostnames.
	Survivors Bots fully-supported in Helms-Deep
	shortened class effect vars
	Healers now heal with bullets.
	Shamans can heal with melee attacks.

	4.0.3
	Added customizable database. If one isn't specified with the "db record?" keyvalue, one of these will be picked by default

	4.0.1
	- Action bars are implemented!
	- Magic system revamped!

	4.0

	1.	Revamped the Common Affix System to be more robust.
		a.	How we display common affixes has been expanded to make room for new affixes.
		b.	Also to make room for survivor auras, we don't want people getting more confused than they will already be.
		c.	Maybe support for multiple affixes on a common?
		d.	Level restrictions for certain common affixes as well as level ranges for others!
	2.	Elemental damage
		a.	Special commons and Special infected will have a halo above their heads in the colour associated
			with the elemental damage they spawned with. Common infected are always physical damage.
	3.	Survivor Auras
		These are essentially spells. A player can have one active at any time and change the active aura with the
		shortcut command for the aura they wish to change to. This can be done only when aura switch is not on cooldown.
		Players can reduce this interval by stacking Agility in the new CARTEL system...
	4.	SLATE -> CARTEL
		Slate is being replaced with the newer and more robust CARTEL system.
		Upgrade points are either spent on talents OR on a CARTEL point. CARTEL points affect everything, so a point in
		one of these categories is much more valuable than stacking into a single talent. This adds another layer of
		strategy that players will have to adapt to.

	3.9.2
	1.	Preparing for 4.0 major changes coming.
	2.	Changed witch damage / level to be a linear increase.

	3.9.1
	1.	New Special Common Classes.
	2.	Common Infected have received health pools.
	3.	Special/Standard Common Infected now affected by damage talents.
	4.	RPG now properly loads on a server startup!
	5.	HUD has been redesigned: Status Effects added for the Buffer/Hexer roles.

	3.8.6.2
	1.	Special Common Infected added. (Formerly affixes, formerly auras)
	2.	Fixed some issues with talent points and level-ups.
	3.	Respec now resets SLATE as well, since they will be important in the survivor skills update.
	4.	If the experience requirements ever change and a player doesn't line up, it will automatically adjust them and refund everything for them.
	5.	Due to abuse, free weapons now are removed when purchased. If you want to give someone something, use the !drop command.
	6.	Due to the new system, players can again spend talents when alive.

	3.8.6.1
	1.	Added AoE Healing (Defensive & Offensive) Abilities.
	2.	Added Abilities that damage/kill/affect Common Infected.
	3.	Added Healing Role Support.
	4.	Corrected some minor issues (like experience debt triggering multiple times / death)

	3.8.5
	1.	Added a tanking experience reward. Players can now choose to play a role as a damage dealer, tank, or both.
		Players receive tanking experience when the damage received is greater than their damage contributed but
		the player must still meet the minimum damage contribution requirement.

	3.8.4, 3.8.3
	1.	Miscellaneous fixes and updates for Quality of Life

	3.8.2
	1.	Fixed an issue that eliminated worldspawn damage triggers.

	3.8.1
	1.	Locked Talent upgrades to dead players or during pre-game.
	2.	Upgrades Available replaces the old, archaic, manual upgrade system.

	3.7.5
	1.	Discovered a bug that a user in the community had been exploiting for insane experience rewards; simply, weapon talents would affect
		all weapons when you trigger the talent and just switch weapons. Now, for damage bonus talents, the damage is applied immediately
		and no multiplier that can be exploited is used.
	2.	Fixed an issue that rewarded players with points and experience for overkill damage.
	3.	Potential bug fix for tank death anim bug. Valve, why are your programmers so fucking shitty that they can't patch a bug that has been
		in the game for over 7 years????
	4.	BaseDamageMultiplier system removed; it was buggy, and simply replaced with a better system.
	5.	Redundancies in place for SDHHook and new health pool systems; sometimes players are not properly connected to it and it creates adverse
		effects on the player experience.
	6.	Low-level handicapping has been removed as it caused issues.
	7.	Corrected an issue that allowed special infected to pre-death before they were killed in any instance.
	8.	Hard-coded special infected life to always reset to a set value whenever they take damage since damage is stored in variables, and not by the game.
	2\left4dead2\models\props_urban\metal_pole001.mdl

	3.7.4
	1.	Infected point and experience earning has been updated.
		Infected players (and bots) will earn experience and points in real-time as they hurt survivors
		instead of having to wait until after they die, which should hopefully create better balance between survivors and infected.


	3.7.3
	1.	To combat higher-level players who like to just rush, knowing that they have respawn abilities and death is not a punishment
		I have now added the dreaded experience debt to the game. Rejoice, hell is here.


	3.7.2
	1.	Added Required Ranges for certain weapons; sniper rifles, for instance, will actually receive damage penalties when
		a player uses them when too close to special infected. This prevents players from no-scoping sniper rifle shots while
		dancing, essentially to distinctly classify shotguns and snipers into their own groups.

	3.7.1
	1.	Damage System Redesign

		The damage system has been redesigned due to SDKHooks providing a more
		reliable solution versus the player_hurt event.
		AURAS REMOVED IN 3.7.1 - Let's focus on player skills & equipment instead.


	2.	Menu System Expanded

		The main menu system has been expanded to support new entries in the config files.
		"menu name?"	->	Which sub-menu of the main-menu should be open; "main" is hard-coded for main menu.
		"target menu?"	->	Which sub-menu of the main-menu does this open call?

		Ability chance has been re-balanced. Since talents either come with the option to require ability chance
		or not require ability chance, but can't use their own, I wrote a work-around until I can go back and
		redesign that system. if the talent is in menu named "shotgun talents" and requires ability chance, then
		you must also have an ability chance talent in the menu named "shotgun talents" as all talents in the same
		menu will feed from the same ability chance. This lets us weight different categories completely different.

	3.	Macroable talent upgrade system

		Adds new command: talentupgrade <id#> <value>
		Using this command with / or ! a user can instantly fill specific talents with specific values.
		Allows for unlimited build diversity, and should help reduce time players spend manually inserting points
		in endgame when they have thousands of upgrade points.

	4.	Survival support
		Official Support for survival is added. Yep... go ham.

	3.6.2
	Contribution system tweaked;
	Player Level determines:
	1. Upgrades Limits
	2. Outgoing (and incoming) damage.

	Sky Level determines:
	1. Item drop chances.
	2. Special Infected / Witch Health pools.

	3.6.1
	Contribution system added.

 	List:InfectedHealth[MAXPLAYERS + 1];
 	block 0 - entity id.
 	block 1 - true health (infectedhealth - (infectedhealth * teamPercentage))
 	block 2 - each individual player contribution
 	block 3 - player damage taken from the special infected (for tank xp bonus)
 	block 4 - player healing done // deprecated in v0.9.9 (Survivor buffs and then full release.)
 	block 5 - infected health original - used to determine how much tanking rating to give (this - tankingdone)

 	The idea is instead of directly sharing health with mobs that each player
 	fights a mob of their own health pool. This design eliminates the issue that
 	lower level (and higher level) players have with zombies that either have
 	too little or too much health, allowing players of multiple level ranges
 	to co-exist on the same server together.

 	Both health bars are shown to the player, so they have a general idea of how
 	fast they're killing the mob, comparatively to the group effort.

 	When the group effort reaches 100% of the mob health, the mob is killed and
 	players earn the full range of experience for their contribution.